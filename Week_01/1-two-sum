1. 穷举法
```cpp
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> res;
        for(int i=0;i<nums.size();i++){
            for(int j = i+1;j<nums.size();j++)
             if(nums[i]+nums[j] == target) {
                 res.push_back(i);
                 res.push_back(j);
                 break;
             }
        }
         return res;
    }
};
```
2,hash表法

```cpp
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
		vector<int> res;
 		unordered_map<int, int> m;
		
		for (int i = 0; i <= nums.size() - 1; i++){
			m[nums[i]] = i+1;
		}
		for (int i = 0; i <= nums.size() - 1; i++){
			if (m[target - nums[i]]&&m[target - nums[i]]!=i+1) {
                res = { i,m[target - nums[i]]-1 };               
                }				
			}
    return res;

		}
};
```
